name: Build & Publish to ECR

on:
  push:
    branches:
      - main

env:
  ECR_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REGION:  ${{ secrets.AWS_REGION }}
  ECR_REPO:    ${{ secrets.ECR_REPO_NAME }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.15.1'
          registry-url: 'https://registry.npmjs.org'

      - name: Extract version
        id: extract
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_URI=${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_REPO}:${{ steps.extract.outputs.VERSION }}
          docker build -t $IMAGE_URI .
          docker tag $IMAGE_URI ${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_REPO}:latest

      - name: Push to ECR
        run: |
          IMAGE_URI=${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_REPO}:${{ steps.extract.outputs.VERSION }}
          docker push $IMAGE_URI
          docker push ${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_REPO}:latest